{"id":702020597,"lang":"cpp","time":"4 weeks, 1 day","timestamp":1652869154,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/702020597/","is_pending":"Not Pending","title":"Subarrays with K Different Integers","memory":"N/A","code":"class Solution {\npublic:\n    int subarraysWithKDistinct(vector<int>& nums, int k) {\n        \n        int n = nums.size();\n        int cnt[n + 1];\n        for(int i = 0; i <= n; i++)cnt[i] = 0;\n        int cntr = 0, pos = -1;\n        for(int i = 0; i < n; i++){\n            cnt[nums[i]]++;\n            if(cnt[nums[i]] == 1){\n                cntr++;\n            }\n            if(cntr == k){\n                pos = i; \n                cnt[nums[i]]--;\n                break;\n            }\n        }\n        if(pos == -1)return 0;\n        cntr = 1; int j = 0; long long sum = 0;\n        //cout << pos << endl;\n        for(int i = pos; i < n; i++){\n            if(cnt[nums[i]] == 0){\n                cntr = 1;\n            }\n            cnt[nums[i]]++;\n            while(j < i and cnt[nums[j]] != 1){\n                cntr++;\n                cnt[nums[j]]--;\n                j++;\n            }\n            //cout << cntr <<\" \"<< i << \" \"<< j << endl;\n            sum += cntr;\n        }\n        return sum;\n    }\n};","compare_result":"1111111110111110111110111111000000000000000001111000000","title_slug":"subarrays-with-k-different-integers"}