{"id":512890332,"lang":"cpp","time":"11 months, 3 weeks","timestamp":1624602032,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/512890332/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"6.7 MB","code":"class Solution {\n#define pb push_back\nvector<string> vp;\nvector<int> dig;\nint ans[4];\nvector<char> V[12];\nvoid fun(int i, int n){\n    if(i == n){\n        string s =\"\";\n        for(int j = 0; j < n; j++){\n            s += V[dig[j]][ans[j]];\n        \n        }\n        if(s.size())vp.pb(s);\n        return;\n    }\n    \n    for(int j = 0; j < V[dig[i]].size(); j++){\n        ans[i] = j;\n        fun(i + 1, n);\n    }\n}\npublic:\n    vector<string> letterCombinations(string digits) {\n        \n        \n        for(int i = 0; i < digits.size(); i++){\n            dig.pb(digits[i] - '0');\n        }\n        \n        int j =  2, n = digits.size();\n        for(int i = 0; i < 15; i++){\n            V[j + (i/3)].pb(char(i + 97));\n        }\n        for(int i = 15; i < 19; i++){\n            V[7].pb(char(i + 97));\n        }\n        for(int i = 19; i < 22; i++){\n            V[8].pb(char(i + 97));\n        }\n        for(int i = 22; i < 26; i++){\n            V[9].pb(char(i + 97));\n        }\n        fun(0, n);\n        /*\n        do{\n            fun(0, n);\n        }\n        while(next_permutation(dig.begin(), dig.end()));\n        */\n       \n        return vp;\n    }\n};","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number"}