{"id":718889060,"lang":"cpp","time":"5 days, 21 hours","timestamp":1654866530,"status_display":"Accepted","runtime":"194 ms","url":"/submissions/detail/718889060/","is_pending":"Not Pending","title":"Minimum Number of Work Sessions to Finish the Tasks","memory":"9.2 MB","code":"class Solution {\npublic:\n    int minSessions(vector<int>& tasks, int sessionTime) {\n        int n = tasks.size();\n        int dp[1 << n][16];\n        memset(dp, -1, sizeof dp);\n        function<int(int, int)> calc = [&](int mask, int k){\n            //cout << mask <<\" \" << (1 << n) - 1 << endl;\n            if((1<<n) - 1 == mask){\n                //cout << mask << endl;\n                return 0;\n            }\n            int &ret = dp[mask][k];\n            if(ret != -1)return ret;\n            \n            ret = INT_MAX - 100; bool check = false;\n            for(int i = 0; i < n; i++){\n                if(mask & (1 << i))continue;\n                if(k >= tasks[i])check = 1;\n            }\n            \n            if(check == false)k = sessionTime;\n            \n            for(int i = 0; i < n; i++){\n                if(tasks[i] > k)continue;\n                if(mask & (1 << i))continue;\n                ret = min(ret, calc(mask | (1 << i), k - tasks[i]));\n            }\n            if(!check)ret++;\n            //cout << ret << endl;\n            return ret;\n        };\n        int ans = calc(0, sessionTime);\n        return ans + 1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-work-sessions-to-finish-the-tasks"}