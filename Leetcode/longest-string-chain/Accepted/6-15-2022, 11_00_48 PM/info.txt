{"id":723004832,"lang":"cpp","time":"17 hours, 45 minutes","timestamp":1655312448,"status_display":"Accepted","runtime":"168 ms","url":"/submissions/detail/723004832/","is_pending":"Not Pending","title":"Longest String Chain","memory":"12.7 MB","code":"class Solution {\npublic:\n    bool static compare(string &A, string &B){\n        if(A.size() == B.size()){\n            return A > B;\n        }\n        return A.size() < B.size();\n    }\n    int longestStrChain(vector<string>& words) {\n        short int dp[words.size()];\n        sort(words.begin(), words.end(), compare);\n        for(int i = 0; i < words.size(); i++){\n            dp[i] = 1;\n        }\n        for(int i = 0; i < words.size(); i++){\n            for(int j = i - 1; j >= 0; j--){\n                int cntr = 0, cnt = 0;\n                if(words[i].size() - words[j].size() > 1)break;\n                if(words[i].size() - 1 != words[j].size())continue;\n                for(int k = 0; k < words[i].size(); k++){\n                    if(words[i][k] != words[j][cnt++]){\n                        cntr++;\n                        cnt--;\n                    }\n                }\n                if(cntr == 1){\n                    if(dp[i] < dp[j] + 1)dp[i] = dp[j] + 1;\n                }\n                \n            }\n        }\n        short int Max = 0;\n        for(int i = 0; i < words.size(); i++){\n            Max = max(dp[i], Max);\n        }\n        return Max;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-string-chain"}