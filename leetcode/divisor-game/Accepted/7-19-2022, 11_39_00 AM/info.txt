{"id":750841051,"lang":"cpp","time":"3Â weeks","timestamp":1658209140,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/750841051/","is_pending":"Not Pending","title":"Divisor Game","memory":"6.3 MB","code":"class Solution {\npublic:\n    bool divisorGame(int n) {\n        int dp[n + 3];\n        memset(dp, -1, sizeof dp);\n        function<int(int)> canwin = [&](int this_n){\n            if(this_n == 1)return 1;\n            int &ret = dp[this_n];\n            if(ret != -1)return (1 - ret);\n            ret = 0;\n            for(int i = 1; i < this_n; i++){\n                if(this_n % i == 0)ret |= canwin(this_n - i);\n            }\n            return 1 - ret;\n        };\n        int ans = canwin(n);\n        if(ans)return false;\n        else return true;\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"divisor-game"}