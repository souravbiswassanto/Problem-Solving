{"id":753841726,"lang":"cpp","time":"2 weeks, 3 days","timestamp":1658505716,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/753841726/","is_pending":"Not Pending","title":"Partition List","memory":"10.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* partition(ListNode* head, int x) {\n        ListNode *ptr1, *ptr2, *last;\n        if(head == NULL)return head;\n        function<void(ListNode*)>partitionNode = [&](ListNode* cur){\n            if(cur->next == NULL){\n                if(cur->val < x){\n                    ptr1 = cur;\n                    last = cur;\n                    ptr1->next = NULL;\n                    ptr2 = NULL;\n                }\n                else {\n                    ptr1 = NULL;\n                    ptr2 = cur;\n                }\n                return;\n            }\n            partitionNode(cur->next);\n            if(cur-> val < x) {\n                if(ptr1 == NULL)last = cur;\n                cur->next = ptr1;\n                ptr1 = cur;\n            }\n            else{\n                cur->next = ptr2;\n                ptr2 = cur;\n            }\n            return;\n        };\n        partitionNode(head);\n        if(ptr1 == NULL)return ptr2;\n        if(ptr2 == NULL)return ptr1;\n        head = ptr1;\n        last->next = ptr2;\n        /*\n        while(1){\n            if(ptr1->next == NULL){\n                ptr1->next = ptr2; break;\n            }\n            ptr1 = ptr1->next;\n        }*/\n        return head;\n        \n    } \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-list"}