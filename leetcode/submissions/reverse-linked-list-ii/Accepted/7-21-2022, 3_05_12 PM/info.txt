{"id":752759452,"lang":"cpp","time":"2 weeks, 5 days","timestamp":1658394312,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/752759452/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"7.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseBetween(ListNode* head, int left, int right) {\n        deque<ListNode*> dq;\n        ListNode* root = head;\n        int check = 0; int cntr = 1;\n        while(root){\n            if(cntr == left){\n                check = 1;\n            }\n            if(check){\n                dq.push_back(root);\n            }\n            if(cntr == right)check = 0;\n            root = root->next; cntr++;\n        }\n        while(dq.size() > 1){\n            swap(dq.front()->val, dq.back()->val);\n            dq.pop_front();\n            dq.pop_back();\n        }\n        return head;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"reverse-linked-list-ii"}