{"id":719478216,"lang":"cpp","time":"1 month, 4 weeks","timestamp":1654939311,"status_display":"Accepted","runtime":"289 ms","url":"/submissions/detail/719478216/","is_pending":"Not Pending","title":"Minimum Operations to Reduce X to Zero","memory":"98.4 MB","code":"class Solution {\npublic:\n    int minOperations(vector<int>& nums, int x) {\n        int sum = accumulate(nums.begin(), nums.end(), 0);\n        int l = nums.size() - 1, r = nums.size() - 1;\n        if(sum < x)return -1;\n        if(sum == x)return l + 1;\n        while(l >= 0 and sum > x){\n            sum -= nums[l]; l--;\n        }\n        int ans = INT_MAX;\n        if(sum == x){\n            ans = l + 1;\n        }\n        int tot = 0;\n        for(int i = nums.size() - 1; i >= 0; i--){\n            if(tot > x)break;\n            tot += nums[i];\n            while(l >= 0 and tot + sum > x){\n                sum -= nums[l]; l--;\n            }\n            while(l >= i)sum -= nums[l--];\n            if(tot + sum == x){\n                ans = min(ans, l + 1 + (int)nums.size() - i);\n            }\n        }\n        if(ans == INT_MAX)return -1;\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-operations-to-reduce-x-to-zero"}