{"id":748559467,"lang":"cpp","time":"3 weeks, 2 days","timestamp":1657979477,"status_display":"Accepted","runtime":"1130 ms","url":"/submissions/detail/748559467/","is_pending":"Not Pending","title":"Partition Array Into Two Arrays to Minimize Sum Difference","memory":"40.3 MB","code":"class Solution {\npublic:\n    int minimumDifference(vector<int>& nums) {\n        int n = nums.size() / 2;\n        vector<int> rightPart[n + 1];\n        int sum = 0, mindiff = INT_MAX, requiredSum = 0;\n        for(int i = 0; i < nums.size(); i++){\n            sum += nums[i];\n        }\n        requiredSum = sum / 2;\n        for(int i = 0; i < (1 << n); i++){\n            int Bit = 0;\n            int totalSum = 0;\n            for(int j = 0; j < n; j++){\n                if((i & (1 << j)) == 0)continue;\n                Bit++;\n                totalSum += (nums[n + j]);\n            }\n            rightPart[Bit].push_back(totalSum);\n        }\n        for(int i = 0 ;i <= n; i++){\n            rightPart[i].push_back(-400000000);\n            rightPart[i].push_back(400000000);\n            sort(rightPart[i].begin(), rightPart[i].end());\n        }\n        \n        for(int i = 0; i < (1 << n); i++){\n            int Bit = 0;\n            int totalSum = 0;\n            for(int j = 0; j < n; j++){\n                if((i & (1 << j)) == 0)continue;\n                Bit++;\n                totalSum += (nums[j]);\n            }\n            auto it = upper_bound(rightPart[n - Bit].begin(), rightPart[n - Bit].end(), requiredSum - totalSum);\n            //cout << totalSum <<\" \" << *it <<\" \" << *(it - 1) << endl;\n            int curSum1 = sum - (totalSum + *it);\n            int curSum2 = sum - (totalSum + *(--it));\n            //cout << curSum1 <<\" \" << curSum2 << endl;\n            int curMinDiff = min(abs(curSum1 * 2 - sum), abs(curSum2 * 2 - sum));\n            mindiff = min(mindiff, curMinDiff);\n        }\n        return mindiff;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-array-into-two-arrays-to-minimize-sum-difference"}