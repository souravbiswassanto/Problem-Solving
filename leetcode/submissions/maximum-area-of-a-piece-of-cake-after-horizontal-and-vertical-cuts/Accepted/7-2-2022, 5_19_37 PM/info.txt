{"id":736547758,"lang":"cpp","time":"1 month, 1 week","timestamp":1656760777,"status_display":"Accepted","runtime":"91 ms","url":"/submissions/detail/736547758/","is_pending":"Not Pending","title":"Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts","memory":"32.3 MB","code":"class Solution {\npublic:\n    int maxArea(int h, int w, vector<int>& horizontalCuts, vector<int>& verticalCuts) {\n        horizontalCuts.push_back(0);\n        horizontalCuts.push_back(h);\n        verticalCuts.push_back(0);\n        verticalCuts.push_back(w);\n        sort(horizontalCuts.begin(), horizontalCuts.end());\n        sort(verticalCuts.begin(), verticalCuts.end());\n        int mxArea = 0;\n        int maxGapHorizontal = 0;\n        int maxGapVertical = 0;\n        for(int i = 0; i < horizontalCuts.size() - 1; i ++){\n            maxGapHorizontal = max(maxGapHorizontal, horizontalCuts[i + 1] - horizontalCuts[i]);\n        }\n        for(int i = 0; i < verticalCuts.size() - 1; ++i) {\n            maxGapVertical = max(maxGapVertical, verticalCuts[i + 1] - verticalCuts[i]);\n        }\n        mxArea = (maxGapHorizontal * 1LL * maxGapVertical) % 1000000007;\n        return mxArea;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts"}