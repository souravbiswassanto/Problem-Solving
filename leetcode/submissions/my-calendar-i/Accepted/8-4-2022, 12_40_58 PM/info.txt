{"id":764812722,"lang":"cpp","time":"5 days, 6 hours","timestamp":1659595258,"status_display":"Accepted","runtime":"145 ms","url":"/submissions/detail/764812722/","is_pending":"Not Pending","title":"My Calendar I","memory":"42 MB","code":"class MyCalendar {\npublic:\n    set<pair<int, int>> S;\n    MyCalendar() {\n        S.insert({-1e9, -1e9});\n        S.insert({2e9, 2e9});\n    }\n    \n    bool book(int start, int end) {\n        end--;\n        auto it = S.upper_bound({start, end});\n        auto it1 = --it;\n        auto it2 = ++it;\n        int upright = it1->second;\n        int downleft = it2->first;\n        \n        if(start > upright and end < downleft){\n            S.insert({start, end});\n            return true;\n        }\n        vector<pair<int, int>> v;\n        int mx = INT_MIN;\n        int mn = INT_MAX;\n        \n        if(it1->second >= start)it = it1;\n        mx = it->second;\n        mn = it->first;\n        for(auto iter = it; iter != S.end(); ++iter){\n            if(mx >= iter->first){\n                mn = min(mn, iter->first);\n                mx = max(mx, iter->second);\n            }\n            else break;\n            v.push_back({iter->first, iter->second});\n        }\n        for (auto pr: v){\n            S.erase(pr);\n        }\n        S.insert({mn, mx});\n        return false;\n    }\n};\n\n/**\n * Your MyCalendar object will be instantiated and called as such:\n * MyCalendar* obj = new MyCalendar();\n * bool param_1 = obj->book(start,end);\n */","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"my-calendar-i"}