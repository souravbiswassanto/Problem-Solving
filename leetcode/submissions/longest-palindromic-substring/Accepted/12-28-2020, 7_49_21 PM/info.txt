{"id":435562431,"lang":"cpp","time":"1 year, 7 months","timestamp":1609163361,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/435562431/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"8.6 MB","code":"class Solution {\npublic:\n    \n    string convert(string s){\n        string nwS = \"@\";\n        for (int i = 0; i < (int)s.size(); i++) {\n            nwS += \"#\" + s.substr(i, 1);\n        }\n        nwS += \"#$\";\n        return nwS;\n    }\n    string longestPalindrome(string s) {\n        string res = s;\n        s = convert(s);\n        int n = s.size();\n        int P[s.size() * 2];\n        int l = 0, r = -1;\n        for(int i = 1; i < (int)s.size() - 1; i++){\n            int k;\n            if(i > r){\n                k = 0;\n            }\n            else {\n                int j = r - i + l;\n                k = min (P[j], r - i);\n            }\n            while(i + k < n and i - k >= 0 and s[i+k] == s[i-k])k++;\n            if(s[i-k] != s[i+k])k--;\n            P[i] = k;\n            if(i + k > r){\n                r = i + k;\n                l = i - k;\n            }\n        }\n        int maxpal = 0;\n        int idx = 0;\n        for(int i = 1; i < s.size() - 1; i++){\n            if(P[i] > maxpal){\n                maxpal = P[i];\n                idx = i - P[i] ;\n                idx /= 2;\n            }\n        }\n\treturn res.substr(idx,maxpal);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring"}