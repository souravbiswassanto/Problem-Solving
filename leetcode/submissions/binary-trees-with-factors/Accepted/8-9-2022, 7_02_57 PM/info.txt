{"id":769324246,"lang":"cpp","time":"34Â minutes","timestamp":1660050177,"status_display":"Accepted","runtime":"208 ms","url":"/submissions/detail/769324246/","is_pending":"Not Pending","title":"Binary Trees With Factors","memory":"9.3 MB","code":"class Solution {\npublic:\n    const int mod = 1e9 + 7;\n    int numFactoredBinaryTrees(vector<int>& arr) {\n        map<int, int> hashMap;\n        for (int i = 0; i < arr.size(); ++i) {\n            hashMap[arr[i]] = 1;\n        }\n        int sum = arr.size(); sum  = 0;\n        sort(arr.begin(), arr.end());\n        for(int i = 0; i < arr.size(); ++i) {\n            for (int j = i - 1; j >= 0; --j) {\n                int a = arr[i] / arr[j];\n                if (a * arr[j] != arr[i]) continue;\n                if (a <= 1) continue;\n                if (hashMap.find(a) == hashMap.end())continue;\n                hashMap[arr[i]] = (hashMap[arr[i]] + (hashMap[arr[j]] * 1LL * hashMap[a]) % mod) % mod;\n                //cout << hashMap[arr[i]] << endl;\n            }\n        }\n        for (auto a: hashMap) {\n            //cout << a.first <<\" \" << a.second << endl;\n            sum = (sum + a.second) % mod;\n        }\n        return sum;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"binary-trees-with-factors"}