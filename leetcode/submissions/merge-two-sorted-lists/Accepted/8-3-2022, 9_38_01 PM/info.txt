{"id":764252666,"lang":"cpp","time":"5 days, 21 hours","timestamp":1659541081,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/764252666/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"14.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        ListNode* dummy = new ListNode(-1000);\n        ListNode* head = dummy;\n        while(list1 != NULL or list2 != NULL){\n            if(list1 == NULL){\n                dummy->next = list2;\n                dummy = dummy->next;\n                list2 = list2-> next;\n            }\n            else if(list2 == NULL){\n                dummy->next = list1;\n                dummy = dummy->next;\n                list1 = list1-> next;\n            }\n            else if(list1->val <= list2->val){\n                dummy->next = list1;\n                dummy = dummy->next;\n                list1 = list1-> next;\n            }\n            else{\n                dummy->next = list2;\n                dummy = dummy->next;\n                list2 = list2-> next;\n            }\n        }\n        \n        return head->next;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists"}