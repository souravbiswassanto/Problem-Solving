{"id":751793146,"lang":"cpp","time":"2 weeks, 6 days","timestamp":1658299377,"status_display":"Accepted","runtime":"253 ms","url":"/submissions/detail/751793146/","is_pending":"Not Pending","title":"Number of Matching Subsequences","memory":"36.3 MB","code":"class Solution {\npublic:\n    bool isSubsequence(string& s1, string& s2, int m, int n){\n\t\t//This function behaves simliar to the one in previous approach\n        int j = 0;\n        for(int i = 0; i < m && j < n; i++){\n            if(s1[i] == s2[j]) j++;\n        }\n        return j == n;\n    }\n    int numMatchingSubseq(string s, vector<string>& words) {\n        int count = 0;\n\t\t\n\t\t//Hashmap with string and bool pair\n\t\t// Storing whether a string is subsequence or not!\n        unordered_map<string, bool> mp;\n        for(auto x: words){\n\t\t\n\t\t\t//if the string has already occurred then don't compute again\n            if(mp.find(x) != mp.end()) {\n\t\t\t\t// if that string has value true that means it is subsequence, count++\n                if(mp[x] == true) {\n                    count++;\n                }\n\t\t\t\t//if not, go for next string\n                continue;\n            }\n\t\t\t\n\t\t\t// if not calculated previously, compute the value and assign to x(current string from words)\n            mp[x] = isSubsequence(s, x, s.size(), x.size());\n            count += (mp[x] == true);\n        }\n\t\t// return the final count of number of subsequences.\n        return count;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"number-of-matching-subsequences"}