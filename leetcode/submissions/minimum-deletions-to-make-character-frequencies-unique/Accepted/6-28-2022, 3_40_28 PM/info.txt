{"id":733323901,"lang":"cpp","time":"1 month, 1 week","timestamp":1656409228,"status_display":"Accepted","runtime":"79 ms","url":"/submissions/detail/733323901/","is_pending":"Not Pending","title":"Minimum Deletions to Make Character Frequencies Unique","memory":"17.2 MB","code":"class Solution {\npublic:\n    int minDeletions(string s) {\n        int cnt[26];\n        memset(cnt, 0, sizeof cnt);\n        for(int i = 0; i < s.size(); i++){\n            cnt[s[i] - 97]++;\n        }\n        vector<int> v;\n        for(int  i = 0; i < 26; i++){\n            if(cnt[i])v.push_back(cnt[i]);\n        }\n        sort(v.begin(), v.end());\n        int ptr = v[v.size() - 1]; int sum = 0;\n        for(int i = v.size() - 2; i >= 0; i--){\n            if(ptr == 1){\n                sum += v[i]; continue;\n            }\n            int a = v[i] - (ptr - 1);\n            if(a > 0){\n                sum += a;\n                ptr--;\n            }\n            else ptr = v[i];\n        }\n        return sum;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-deletions-to-make-character-frequencies-unique"}