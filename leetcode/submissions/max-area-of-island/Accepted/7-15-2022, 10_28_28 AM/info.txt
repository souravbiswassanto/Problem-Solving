{"id":747471916,"lang":"cpp","time":"3 weeks, 4 days","timestamp":1657859308,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/747471916/","is_pending":"Not Pending","title":"Max Area of Island","memory":"23.9 MB","code":"class Solution {\npublic:\n    int maxAreaOfIsland(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m  = grid[0].size();\n        int vis[n + 1][m + 1];\n        memset(vis, 0, sizeof vis);\n        function<int(int, int)> dfs = [&](int x, int y){\n            \n            if(x < 0 or y < 0 or x == n or y == m)return 0;\n            if(vis[x][y] or !grid[x][y])return 0;\n            int cur = 1; vis[x][y] = 1;\n            cur += dfs(x + 1, y);\n            cur += dfs(x - 1, y);\n            cur += dfs(x, y + 1);\n            cur += dfs(x, y - 1);\n            \n            return cur;\n        };\n        int maxArea = 0;\n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < m; j++){\n                if(grid[i][j] == 0 or vis[i][j] == 1)continue;\n                maxArea = max(maxArea, dfs(i, j));\n                //cout << i <<\" \" << j <<\" \" << maxArea << endl;\n            }\n        }\n        return maxArea;\n    }\n};","compare_resulttitle_slug":"max-area-of-island"}