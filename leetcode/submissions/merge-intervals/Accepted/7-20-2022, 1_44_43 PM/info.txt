{"id":751834947,"lang":"cpp","time":"2 weeks, 6 days","timestamp":1658303083,"status_display":"Accepted","runtime":"49 ms","url":"/submissions/detail/751834947/","is_pending":"Not Pending","title":"Merge Intervals","memory":"19.2 MB","code":"class Solution {\npublic:\n    vector<vector<int>> merge(vector<vector<int>>& intervals) {\n        sort(intervals.begin(), intervals.end());\n        priority_queue<int> q;\n        q.push(-1);\n        int last = -1, n = intervals.size();\n        vector<int> v;\n        vector<vector<int>> ans;\n        for(int i = 0; i < n; i++){\n            int a = intervals[i][0];\n            int b = intervals[i][1];\n            if(a <= q.top()){\n                if(b > q.top()){\n                    q.pop();\n                    q.push(b);\n                }\n            }\n            else{\n                //cout << i << endl;\n                int c = q.top();\n                q.pop();\n                if(c != -1){\n                    v.push_back(last);\n                    v.push_back(c);\n                    ans.push_back(v); v.clear();\n                }\n                last = a;\n                q.push(b);\n            }\n        }\n        if(!q.empty()){\n            v.push_back(last);\n            v.push_back(q.top());\n            ans.push_back(v);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals"}