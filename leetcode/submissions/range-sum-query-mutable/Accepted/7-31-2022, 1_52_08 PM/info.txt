{"id":761317762,"lang":"cpp","time":"1 week, 2 days","timestamp":1659253928,"status_display":"Accepted","runtime":"423 ms","url":"/submissions/detail/761317762/","is_pending":"Not Pending","title":"Range Sum Query - Mutable","memory":"150.7 MB","code":"class NumArray {\npublic:\n    int n; vector<int> BIT, Nums;\n    NumArray(vector<int>& nums) {\n        int idx = -1; Nums.resize(nums.size(), 0);\n        n = nums.size();\n        BIT.resize(n + 2, 0);\n        for(auto numberinNums: nums){\n            update(++idx, numberinNums);\n        }\n    }\n    \n    void update(int index, int val) {\n        int temp = val;\n        val = val - Nums[index];\n        Nums[index] = temp; index++;\n        for(int x = index; x <= n; x += x & -x){\n            //cout << x <<\" \" << n << endl;\n            BIT[x] += val;\n            //cout << x <<\" \" << n << endl;\n        }\n        //cout << \"h \" << endl;\n    }\n    \n    int sumRange(int left, int right) {\n        int sumLeft = 0;\n        int sumRight = 0;\n        for (int x = left; x; x -= x & -x) {\n            sumLeft += BIT[x];\n        }\n        for (int x = right + 1; x; x -= x & -x) {\n            sumRight += BIT[x];\n        }\n        return sumRight - sumLeft;\n    }\n};\n\n/**\n * Your NumArray object will be instantiated and called as such:\n * NumArray* obj = new NumArray(nums);\n * obj->update(index,val);\n * int param_2 = obj->sumRange(left,right);\n */","compare_result":"111111111111111","title_slug":"range-sum-query-mutable"}