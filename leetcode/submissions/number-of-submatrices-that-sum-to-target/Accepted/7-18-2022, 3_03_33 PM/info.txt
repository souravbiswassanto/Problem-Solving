{"id":750109215,"lang":"cpp","time":"3 weeks, 1 day","timestamp":1658135013,"status_display":"Accepted","runtime":"717 ms","url":"/submissions/detail/750109215/","is_pending":"Not Pending","title":"Number of Submatrices That Sum to Target","memory":"9.1 MB","code":"class Solution {\npublic:\n    int numSubmatrixSumTarget(vector<vector<int>>& matrix, int target) {\n        int n = matrix.size();\n        int m = matrix[0].size();\n        \n        int matsum[n + 2][m + 2];\n        memset(matsum, 0, sizeof matsum);\n        for(int i = 1; i <= n; i++){\n            for(int j = 1; j <= m; j++){\n                matsum[i][j] = matsum[i - 1][j] + matsum[i][j - 1] - matsum[i - 1][j - 1] + matrix[i - 1][j - 1];\n            }\n        }\n        int ans = 0;\n        for(int x = 1; x <= n; x++){\n            for(int y = 1; y <= m; y++){\n                for(int x1 = x; x1 <= n; x1++){\n                    for(int y1 = y; y1 <= m; y1++){\n                        int sum = matsum[x1][y1] + matsum[x - 1][y - 1] - matsum[x1][y - 1] - matsum[x - 1][y1];\n                        if(sum == target)ans++;\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"number-of-submatrices-that-sum-to-target"}