{"id":744930554,"lang":"cpp","time":"4Â weeks","timestamp":1657606795,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/744930554/","is_pending":"Not Pending","title":"Matchsticks to Square","memory":"N/A","code":"class Solution {\npublic:\n    bool makesquare(vector<int>& matchsticks) {\n        int n = matchsticks.size(), maxElement = 0;\n        vector<int> oneSide, twoSide;\n        int sumOfFourSide = 0;\n        for(int i = 0; i < n; i++){\n            sumOfFourSide += matchsticks[i];\n            maxElement = max(maxElement, matchsticks[i]);\n        }\n        if(sumOfFourSide % 4)return false;\n        int oneSideLen = sumOfFourSide / 4;\n        if(maxElement > oneSideLen)return false;\n        for(int i = 1; i < (1 << n); i++){\n            int bitSum = 0;\n            for(int j = 0; j < n; j++){\n                if(i & (1 << j))bitSum += matchsticks[j];\n            }\n            if(bitSum == oneSideLen)oneSide.push_back(i);\n        }\n        for(int i = 0; i < oneSide.size(); i++){\n            for(int j = i + 1; j < oneSide.size(); j++){\n                if((oneSide[i] & oneSide[j]) == 0)twoSide.push_back(oneSide[i] | oneSide[j]);\n            }\n        }\n        sort(twoSide.begin(), twoSide.end());\n        bool hashMap[(1 << n) + 5];\n        for(auto it: twoSide)hashMap[it] = true;\n        for(int i = 0; i < twoSide.size(); i++){\n            int restTwoSide = (1 << n) - twoSide[i] - 1;\n            if(hashMap[restTwoSide])return true;\n            //if(binary_search(twoSide.begin(), twoSide.end(), restTwoSide))return true;\n        }\n        return false;\n    }\n};","compare_result":"110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"matchsticks-to-square"}