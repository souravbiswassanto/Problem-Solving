{"id":719507293,"lang":"cpp","time":"1 month, 4 weeks","timestamp":1654942825,"status_display":"Accepted","runtime":"100 ms","url":"/submissions/detail/719507293/","is_pending":"Not Pending","title":"Sum of Subarray Minimums","memory":"38.9 MB","code":"class Solution {\npublic:\n    int sumSubarrayMins(vector<int>& arr) {\n        int n = arr.size();\n        int L[n + 1], R[n + 1];\n        for(int i = 1; i <= n; i++){\n            L[i] = 1, R[i] = 1;\n        }\n        \n        for(int i = 2; i <= n; i++){\n            int j = i - L[i];\n            while(j > 0 and arr[j - 1] > arr[i - 1]){\n                L[i] += L[j];\n                j -= L[j];\n            }\n        }\n        for(int i = n - 1; i >= 1; i--){\n            int j = i + R[i];\n            while(j <= n and arr[j - 1] >= arr[i - 1]){\n                R[i] += R[j];\n                j += R[j];\n            }\n        }\n        int ans = 0, mod = 1e9 + 7;\n        for(int i = 1; i <= n; i++){\n            //cout << L[i]<<\" \"<< R[i] << endl;\n            int a = (L[i] * (R[i])) % mod;\n            ans = (ans + (a  *1LL* arr[i - 1]) % mod ) % mod;\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-subarray-minimums"}