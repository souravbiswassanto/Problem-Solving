{"id":752813512,"lang":"cpp","time":"2 weeks, 5 days","timestamp":1658400161,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/752813512/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"9.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        ListNode* tempHead;\n        if(head == NULL)return head;\n        function<ListNode*(ListNode*, ListNode*)> reverse = [&](ListNode* cur, ListNode* prev){\n            if (cur->next == NULL) {\n                cur->next = prev;\n                return cur;\n            }  \n            ListNode* node = reverse(cur->next, cur);\n            cur->next = prev;\n            return node;\n        };\n        head = reverse(head, NULL);\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list"}