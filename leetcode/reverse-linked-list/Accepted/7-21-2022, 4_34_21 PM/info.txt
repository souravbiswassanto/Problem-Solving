{"id":752809086,"lang":"cpp","time":"2 weeks, 5 days","timestamp":1658399661,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/752809086/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"9.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        ListNode* tempHead;\n        if(head == NULL or head->next == NULL)return head;\n        function<ListNode*(ListNode*)> recursion = [&](ListNode* cur){\n            if(cur->next == NULL){\n                tempHead = cur;\n                return cur;\n            }\n            ListNode* node = recursion(cur->next);\n            node->next = cur;\n            return cur;\n        };\n        \n        ListNode* root = recursion(head); head->next = NULL; root = tempHead;\n        return root;\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list"}