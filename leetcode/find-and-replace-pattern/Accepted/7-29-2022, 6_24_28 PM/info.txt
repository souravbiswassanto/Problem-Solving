{"id":759839568,"lang":"cpp","time":"1 week, 4 days","timestamp":1659097468,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/759839568/","is_pending":"Not Pending","title":"Find and Replace Pattern","memory":"8.7 MB","code":"\nclass Solution {\npublic:\n    \n    vector<int> found_Pattern(string pattern)\n    {\n\t   // if string is empty return empty vector.\n        if(pattern.size() == 0)\n            return {};\n        \n        vector<int> v;\n\t\t\n\t\t// ind variable for keeping track of unique characters\n        int ind = 0;\n\t\t\n        unordered_map<char,int> mp;\n        for(int i = 0; i<pattern.size(); ++i)\n        {\n\t\t\t// if character not present in map, insert the char with an index,\n\t\t\t// increment index because for next unique character the index should be differnt.\n           if(mp.find(pattern[i]) == mp.end())\n           {\n               mp.insert({pattern[i],ind++});\n\t\t\t   // also  push the index to v(numeric  pattern vector)\n\t\t\t   // mp[pattern[i]] gives the key to that character, here key is ind(which we are giving to every unique character)\n               v.push_back(mp[pattern[i]]);\n           }\n            else\n            {\n\t\t\t\t// if char is already in map than push index mapped to that character into the vector\n                v.push_back(mp[pattern[i]]);\n            }\n        }\n\t\t// return numeric pattern\n        return v;\n    }\n    vector<string> findAndReplacePattern(vector<string>& words, string pattern) {\n       \n\t\t// store numeric patten of Pattern string in v\n        vector<int> v = found_Pattern(pattern);\n        \n        int n = words.size();\n        vector<string> ans;\n        \n\t\t// iterating and comparing pattern of each word with v(numeric pattern of Pattern)\n        for(int i = 0; i<n; ++i)\n        {\n            vector<int> pattern_word = found_Pattern(words[i]);\n            \n\t\t\t// if matched add words[i] to answer vector\n            if(v == pattern_word)\n                ans.push_back(words[i]);\n        }\n        \n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"find-and-replace-pattern"}