{"id":746049501,"lang":"cpp","time":"3 weeks, 6 days","timestamp":1657715320,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/746049501/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"13.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<int> v[2001]; int mx = -1;\n        \n        function<void(TreeNode*, int)> dfs = [&](TreeNode* poot, int level){\n            if(poot == NULL)return;\n            mx = max(mx, level);\n            v[level].push_back(poot->val);\n            if(poot->left != NULL){\n                dfs(poot->left, level + 1);\n            }\n            if(poot->right != NULL){\n                dfs(poot->right, level + 1);\n            }\n        };\n        dfs(root, 0);\n        vector<vector<int>> ans;\n        for(int i = 0; i <= mx; i++){\n            vector<int> vs;\n            for(auto it: v[i])vs.push_back(it);\n            ans.push_back(vs);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}