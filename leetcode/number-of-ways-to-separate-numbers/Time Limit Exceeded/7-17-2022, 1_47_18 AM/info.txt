{"id":748799833,"lang":"cpp","time":"3 weeks, 2 days","timestamp":1658000838,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/748799833/","is_pending":"Not Pending","title":"Number of Ways to Separate Numbers","memory":"N/A","code":"class Solution {\npublic:\n    int numberOfCombinations(string num) {\n        int n = num.size();\n        int isSmall[n + 4][n + 4], dp[n + 4][n + 4];\n        memset(isSmall, 0, sizeof isSmall);\n        memset(dp, -1, sizeof dp);\n        const int mod = 1e9 + 7;\n        for(int i = 0; i < n; i++){\n            for(int j = 1; j < n; j++){\n                if(i + j > n)break;\n                if(i - j < 0)break;\n                \n                string s1 = num.substr(i - j, j);\n                string s2 = num.substr(i, j);\n                if(s2 >= s1){\n                    isSmall[i][j] = 1;\n                }\n            }\n        }\n        function<int(int, int)> calc = [&] (int idx, int last){\n            //cout << idx <<\" \" << last << endl;\n            if(idx > n)return 0;\n            if(idx == n)return 1;\n            int &ret = dp[idx][last];\n            if(ret != -1)return ret;\n            ret = 0;\n            int start = (isSmall[idx][last] == 1)?last: last + 1;\n            if(num[idx] =='0')return 0;\n            for(int i = start; i <= n; i++){\n                if(idx + i > n)break;\n                ret = (ret + calc(idx + i, i)) % mod;\n            }\n            return ret;\n        };\n        int ans = calc(0, 0);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110","title_slug":"number-of-ways-to-separate-numbers"}