{"id":757814096,"lang":"cpp","time":"1 week, 6 days","timestamp":1658897528,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/757814096/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"11.5 MB","code":"class Solution {\npublic:\n    vector<string> generateParenthesis(int n) {\n        vector<string> answer; n *= 2;\n        string globalString = \"\"; for(int i = 0; i < n; i++)globalString += 'a';\n        function<void(int, int)> backtrack = [&](int idx, int sum){\n            \n            if(idx == n){\n                bool isvalid = true;\n                int cntr = 0;\n                for(int i = 0; i < n; i++){\n                    if(globalString[i] == '(')cntr++;\n                    else cntr--;\n                    if(cntr < 0)isvalid = false;\n                }\n                if(cntr != 0 or isvalid == false)return;\n                answer.push_back(globalString);\n                return;\n            }\n            if(sum < 0)return;\n            if(sum > (n - idx))return;\n            globalString[idx] = '(';\n            backtrack(idx + 1, sum + 1);\n            globalString[idx] = ')';\n            backtrack(idx + 1, sum - 1);\n            return;\n        };\n        backtrack(0, 0);\n        return answer;\n    }\n};","compare_result":"11111111","title_slug":"generate-parentheses"}